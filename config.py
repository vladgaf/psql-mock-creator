import os
import json
from peewee import PostgresqlDatabase

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

# –ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º
MODELS_DIR = os.path.join(BASE_DIR, 'models')
MOCK_DATA_DIR = os.path.join(BASE_DIR, 'mock_data')
CONFIG_DIR = os.path.join(BASE_DIR, 'config')
UTILS_DIR = os.path.join(BASE_DIR, 'utils')

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ PostgreSQL
POSTGRES_CONFIG_PATH = os.path.join(CONFIG_DIR, 'postgres.json')


def load_postgres_config():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        if not os.path.exists(POSTGRES_CONFIG_PATH):
            raise FileNotFoundError(f"–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {POSTGRES_CONFIG_PATH}")

        with open(POSTGRES_CONFIG_PATH, 'r', encoding='utf-8') as f:
            config = json.load(f)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        required_fields = ['user', 'password', 'host', 'port']
        for field in required_fields:
            if field not in config:
                raise ValueError(f"–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ –ø–æ–ª–µ '{field}' –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è PostgreSQL –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ {POSTGRES_CONFIG_PATH}")
        return config

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PostgreSQL: {e}")
        print("üîÑ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é")

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        return {
            'user': 'postgres',
            'password': '0000',
            'host': 'localhost',
            'port': 5432
        }


# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL
POSTGRES_CONFIG = load_postgres_config()

# –°–ø–∏—Å–æ–∫ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
DATABASES_CONFIG = {
    'video_games': {
        'db_name': 'games_easy',
        'description': '–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–µ–æ–∏–≥—Ä (–ø—Ä–æ—Å—Ç–∞—è)',
        'models_module': 'models.video_games',
        'mock_data_folder': 'video_games'
    },
    'school_world': {
        'db_name': 'school_world',
        'description': '–®–∫–æ–ª—å–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö',
        'models_module': 'models.school_world',
        'mock_data_folder': 'school_world'
    },
    'games_shop': {
        'db_name': 'games_shop',
        'description': '–ú–∞–≥–∞–∑–∏–Ω –≤–∏–¥–µ–æ–∏–≥—Ä —Å –∑–∞–∫–∞–∑–∞–º–∏',
        'models_module': 'models.games_shop',
        'mock_data_folder': 'games_shop'
    }
}


def create_database_connection(db_name):
    """–°–æ–∑–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL"""
    return PostgresqlDatabase(
        db_name,
        user=POSTGRES_CONFIG['user'],
        password=POSTGRES_CONFIG['password'],
        host=POSTGRES_CONFIG['host'],
        port=POSTGRES_CONFIG['port']
    )


def test_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL"""
    try:
        conn = create_database_connection('postgres')
        conn.connect()
        conn.close()
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
        return False


def show_postgres_config():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–±–µ–∑ –ø–∞—Ä–æ–ª—è)"""
    safe_config = POSTGRES_CONFIG.copy()
    safe_config['password'] = '***'  # –°–∫—Ä—ã–≤–∞–µ–º –ø–∞—Ä–æ–ª—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    print("üìã –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ PostgreSQL:")
    for key, value in safe_config.items():
        print(f"   {key}: {value}")