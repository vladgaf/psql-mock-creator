#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —É—á–µ–±–Ω—ã—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
"""

import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT
from config import POSTGRES_CONFIG, DATABASES_CONFIG


def cleanup_databases():
    """–£–¥–∞–ª—è–µ—Ç –≤—Å–µ —É—á–µ–±–Ω—ã–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üßπ –û–ß–ò–°–¢–ö–ê –£–ß–ï–ë–ù–´–• –ë–ê–ó –î–ê–ù–ù–´–•")
    print("=" * 40)

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±–∞–∑
        conn = psycopg2.connect(
            user=POSTGRES_CONFIG['user'],
            password=POSTGRES_CONFIG['password'],
            host=POSTGRES_CONFIG['host'],
            port=POSTGRES_CONFIG['port'],
            database='postgres'
        )
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = conn.cursor()

        for db_name, db_config in DATABASES_CONFIG.items():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã
                cursor.execute("SELECT 1 FROM pg_catalog.pg_database WHERE datname = %s", (db_config['db_name'],))
                exists = cursor.fetchone()

                if exists:
                    # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π
                    cursor.execute(f"""
                        SELECT pg_terminate_backend(pg_stat_activity.pid)
                        FROM pg_stat_activity
                        WHERE pg_stat_activity.datname = '{db_config['db_name']}'
                        AND pid <> pg_backend_pid();
                    """)

                    # –£–¥–∞–ª—è–µ–º –±–∞–∑—É
                    cursor.execute(f'DROP DATABASE "{db_config["db_name"]}"')
                    print(f"‚úÖ –ë–∞–∑–∞ '{db_config['db_name']}' —É–¥–∞–ª–µ–Ω–∞")
                else:
                    print(f"‚ÑπÔ∏è –ë–∞–∑–∞ '{db_config['db_name']}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –±–∞–∑—ã '{db_config['db_name']}': {e}")

        cursor.close()
        conn.close()
        print("\nüéØ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")


if __name__ == "__main__":
    cleanup_databases()